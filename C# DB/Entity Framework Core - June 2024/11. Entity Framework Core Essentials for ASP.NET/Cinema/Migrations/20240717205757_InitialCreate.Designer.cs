// <auto-generated />
using System;
using CinemaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaApp.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20240717205757_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CinemaApp.Data.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Address = "Sofia, Mladost 4",
                            Name = "Arena Mladost"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Veliko Tarnovo, Bulgaria boulevard",
                            Name = "Kino Iskra"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Mall of Sofia",
                            Name = "Cinema City"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Spas",
                            LastName = "Nedelev",
                            Username = "GoalscorerBG"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ivo",
                            LastName = "Ivanov",
                            Username = "ii123"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Petar",
                            LastName = "Petrov",
                            Username = "pepe"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Ivan",
                            LastName = "Ivov",
                            Username = "viviandi"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = 0,
                            Name = "Titanic"
                        },
                        new
                        {
                            Id = 2,
                            Genre = 0,
                            Name = "Gladiator"
                        },
                        new
                        {
                            Id = 3,
                            Genre = 0,
                            Name = "Nowhere"
                        },
                        new
                        {
                            Id = 4,
                            Genre = 0,
                            Name = "Pearl Harbor"
                        },
                        new
                        {
                            Id = 5,
                            Genre = 0,
                            Name = "Snatch"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 4,
                            Name = "IMAX Hall 1"
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 3,
                            Name = "VIP Hall"
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 2,
                            Name = "3D Hall"
                        },
                        new
                        {
                            Id = 4,
                            CinemaId = 1,
                            Name = "2D Hall"
                        },
                        new
                        {
                            Id = 5,
                            CinemaId = 3,
                            Name = "3D Ultra VIP IMAX"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("HallId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            FilmId = 5,
                            HallId = 4,
                            Start = new DateTime(2024, 7, 17, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Duration = new TimeSpan(0, 2, 30, 0, 0),
                            FilmId = 4,
                            HallId = 5,
                            Start = new DateTime(2024, 8, 1, 19, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Duration = new TimeSpan(0, 1, 40, 0, 0),
                            FilmId = 3,
                            HallId = 1,
                            Start = new DateTime(2024, 8, 8, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallId = 2,
                            Number = 1,
                            Row = 13
                        },
                        new
                        {
                            Id = 2,
                            HallId = 3,
                            Number = 2,
                            Row = 14
                        },
                        new
                        {
                            Id = 3,
                            HallId = 1,
                            Number = 39,
                            Row = 2
                        },
                        new
                        {
                            Id = 4,
                            HallId = 2,
                            Number = 33,
                            Row = 5
                        },
                        new
                        {
                            Id = 5,
                            HallId = 3,
                            Number = 18,
                            Row = 6
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Tariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("DiscountFactor")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tariffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountFactor = 1m,
                            Name = "Adult"
                        },
                        new
                        {
                            Id = 2,
                            DiscountFactor = 0.8m,
                            Name = "Student"
                        },
                        new
                        {
                            Id = 3,
                            DiscountFactor = 0.7m,
                            Name = "Senior"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<int>("TariffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SeatId");

                    b.HasIndex("TariffId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 20m,
                            CustomerId = 3,
                            ScheduleId = 2,
                            SeatId = 5,
                            TariffId = 3
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 16m,
                            CustomerId = 1,
                            ScheduleId = 1,
                            SeatId = 3,
                            TariffId = 2
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 30m,
                            CustomerId = 1,
                            ScheduleId = 2,
                            SeatId = 4,
                            TariffId = 1
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Hall", b =>
                {
                    b.HasOne("CinemaApp.Data.Models.Cinema", "Cinema")
                        .WithMany("Halls")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Schedule", b =>
                {
                    b.HasOne("CinemaApp.Data.Models.Film", "Film")
                        .WithMany("Schedules")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaApp.Data.Models.Hall", "Hall")
                        .WithMany("Schedules")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Seat", b =>
                {
                    b.HasOne("CinemaApp.Data.Models.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Ticket", b =>
                {
                    b.HasOne("CinemaApp.Data.Models.Customer", "Customer")
                        .WithMany("Tickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaApp.Data.Models.Schedule", "Schedule")
                        .WithMany("Tickets")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaApp.Data.Models.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CinemaApp.Data.Models.Tariff", "Tariff")
                        .WithMany("Tickets")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Schedule");

                    b.Navigation("Seat");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Cinema", b =>
                {
                    b.Navigation("Halls");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Customer", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Film", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Hall", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Schedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Tariff", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
